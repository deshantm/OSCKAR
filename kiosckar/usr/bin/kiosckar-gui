#!/usr/bin/python

# KIOSCKAR GUI - Kiosk User Interface (kiosk through OSCKAR)
# Copyright 2009 Todd Deshane and Patrick F. Wilbur

default_install_mirror = "http://archive.ubuntu.com/ubuntu"



from subprocess import *
import os,sys
sys.path.append('/usr/share/kiosckar/lib/')
import kiosckar

path='/etc/kiosckar/contracts/'
while os.system("pidof -xs eventchat") != 0: 
	os.system("sleep 5")
os.system("sleep 5")

if len(sys.argv) > 1:
    port = sys.argv[1]
else:
    port = 5000

kiosckar.connect('localhost',port)

while True:
    menu = ''
    VMs = os.listdir(path)
    for vm in VMs:
        menu += "\"" + vm + "\" "
    menu += "\"EXIT\" "
    selection = Popen(["zenity  --list --width 500 --height 400 --title  \"KIOSCKAR Main Menu\" --text \"Welcome to KIOSK (through OSCKAR)!\" --column \"Select an option (Cancel to exit)\" " + menu,], stdout=PIPE, shell=True).communicate()[0]
    selection = selection.rstrip()

    if selection == '' or selection == 'EXIT':
        sys.exit(0)
    elif selection == 'ADD VM':
        vm_name = Popen(["zenity  --title \"Enter VM Name\" --entry --text \"Please enter a name for your new VM:\"",], stdout=PIPE, shell=True).communicate()[0]
        vm_name = vm_name.strip()
        if vm_name == '':
            continue
        install_mirror = Popen(["zenity  --title \"Choose Install Mirror\" --width 500 --entry --entry-text \"" + default_install_mirror + "\" --text \"Please enter an install mirror:\"",], stdout=PIPE, shell=True).communicate()[0]
        install_mirror = install_mirror.strip()
        if install_mirror == '':
            continue
        progress_pid = Popen(["while [ 1 -eq 1 ]; echo 1; do sleep 1000; done | zenity --progress --pulsate --auto-kill --text \"Creating your new VM...\" & echo $!",], stdout=PIPE, shell=True).communicate()[0]
        kiosckar.addVM(vm_name,install_mirror)
        Popen(["kill " + progress_pid,], shell=True)
    else:
#        progress_pid = Popen(["if [ $(zenity --question --title \"Running VM\" --text \"Running your VM (Cancel exits kiosk completely)...\" & echo $!; echo $?) -eq 1 ]; then killall kiosckar-gui; fi & echo $!",], stdout=PIPE, shell=True).communicate()[0]
        kiosckar.destroy(selection)
        kiosckar.launch(path,selection)
        kiosckar.destroy(selection)
#        Popen(["kill " + progress_pid,], shell=True)

    print ''

